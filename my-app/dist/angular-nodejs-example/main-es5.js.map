{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/acknowledge/acknowledge.component.ts","webpack:///src/app/acknowledge/acknowledge.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/read-survey/read-survey.component.ts","webpack:///src/app/read-survey/read-survey.component.html","webpack:///src/app/survey/survey.component.ts","webpack:///src/app/survey/survey.component.html","webpack:///src/app/winner-ack-list/winner-ack-list.component.ts","webpack:///src/app/winner-ack-list/winner-ack-list.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AcknowledgeComponent","http","router","mean","stdDev","list","getCurrentNavigation","extras","state","std","param","console","log","navigate","studentid","get","subscribe","data","selector","templateUrl","styleUrls","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","AppModule","declarations","providers","bootstrap","ReadSurveyComponent","studentData","check","Students","Location","Campus","Atmosphere","Dormrooms","Sports","tokens","url","httpOptions","headers","post","likemost","split","forEach","element","SurveyComponent","record","form","valid","Object","filter","k","toString","alert","onSubmit","WinnerAckListComponent","environment","production","bootstrapModule","err","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACkBY;;AAAsB;;AAA8B;;;;;;;;AACpD;;AACI;;AAAI;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAwB;;AAAQ;;AACxC;;;;;;AADgC;;AAAA;;;;QDX/BC,oB;;;AAOX,oCAAoBC,IAApB,EAA8CC,MAA9C,EAA8D;AAAA;;AAA1C,aAAAD,IAAA,GAAAA,IAAA;AAA0B,aAAAC,MAAA,GAAAA,MAAA;AAL9C,aAAAC,IAAA,GAAO,IAAP;AACA,aAAAC,MAAA,GAAS,IAAT;AACA,aAAAC,IAAA,GAAO,IAAP;AAIE,aAAKF,IAAL,GAAY,KAAKD,MAAL,CAAYI,oBAAZ,GAAmCC,MAAnC,CAA0CC,KAA1C,CAAgDL,IAA5D;AACA,aAAKC,MAAL,GAAc,KAAKF,MAAL,CAAYI,oBAAZ,GAAmCC,MAAnC,CAA0CC,KAA1C,CAAgDC,GAA9D;AACD;;;;gCAEOC,K,EAAO;AAEbC,iBAAO,CAACC,GAAR,CAAY,cAAcF,KAA1B;AACA,eAAKR,MAAL,CAAYW,QAAZ,CAAqB,CAAC,aAAD,CAArB,EAAsC;AAAEL,iBAAK,EAAE;AAAEM,uBAAS,EAAEJ;AAAb;AAAT,WAAtC;AACD;;;mCACO;AAAA;;AACN,eAAKT,IAAL,CAAUc,GAAV,CAAmB,0DAAnB,EAA+EC,SAA/E,CAAyF,UAAAC,IAAI,EAAI;AACjG,iBAAI,CAACZ,IAAL,GAAYY,IAAZ;AACC,WAFD;AAGD;;;;;;;uBArBUjB,oB,EAAoB,gI,EAAA,uH;AAAA,K;;;YAApBA,oB;AAAoB,sC;AAAA,e;AAAA,a;AAAA,ypB;AAAA;AAAA;ACTjC;;AACA;;AAEA;;AAAO;;AAAsB;;AAC7B;;AAEC;;AACG;;AACE;;AACE;;AACF;;AACF;;AACF;;AACE;;AAA0C;;AAA8B;;AACxE;;AAEQ;;AAAI;;AAAe;;AACnB;;AAAI;;AAAiC;;AACrC;;AACA;;AAKR;;AACA;;AACA;;AAEJ;;;;AAZgB;;AAAA;;AACA;;AAAA;;AACD;;AAAA;;AACC;;AAAA;;;;;;;;;sEDVHA,oB,EAAoB;cALhC,uDAKgC;eALtB;AACTkB,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKsB,Q;;;;;;;;;;;;;;;;;;;;;;;;AETjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAQA,QAAMC,MAAM,GAAW,CAAC;AAACC,UAAI,EAAE,WAAP;AAAoBC,eAAS,EAAE;AAA/B,KAAD,EACvB;AAACD,UAAI,EAAE,EAAP;AAAWC,eAAS,EAAE;AAAtB,KADuB,EAEvB;AAACD,UAAI,EAAE,aAAP;AAAsBC,eAAS,EAAE;AAAjC,KAFuB,EAGvB;AAACD,UAAI,EAAE,YAAP;AAAqBC,eAAS,EAAE;AAAhC,KAHuB,CAAvB;;QAUaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBJ,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBG,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBJ,MAArB,CAAD,CADD;AAERvB,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;AClB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOa6B,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,SAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACNzB;;;;;;;;;sEDMaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTT,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QA8BaS,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBAPJ,CACP,uEADO,EAEP,oEAFO,EAGP,0DAHO,EAIP,qEAJO,EAKP,kEALO,CAOI;;;;0HAGFA,S,EAAS;AAAA,uBAhBlB,2DAgBkB,EAflB,wEAekB,EAdlB,iGAckB,EAblB,uFAakB,EAZlB,sFAYkB;AAZC,kBAGnB,uEAHmB,EAInB,oEAJmB,EAKnB,0DALmB,EAMnB,qEANmB,EAOnB,kEAPmB;AAYD,O;AALC,K;;;;;sEAKVA,S,EAAS;cAlBrB,sDAkBqB;eAlBZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,wEAFY,EAGZ,iGAHY,EAIZ,uFAJY,EAKZ,sFALY,CADN;AAQRJ,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,0DAHO,EAIP,qEAJO,EAKP,kEALO,CARD;AAeRK,mBAAS,EAAE,EAfH;AAgBRC,mBAAS,EAAE,CAAC,2DAAD;AAhBH,S;AAkBY,Q;;;;;;;;;;;;;;;;;;AC9BtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaC,mB;;;AAeX,mCAAoBhC,IAApB,EAA8CC,MAA9C,EAA8D;AAAA;;AAA1C,aAAAD,IAAA,GAAAA,IAAA;AAA0B,aAAAC,MAAA,GAAAA,MAAA;AAd9C,aAAAY,SAAA,GAAY,IAAZ;AACA,aAAAoB,WAAA,GAAc,IAAd;AACA,aAAAC,KAAA,GAAQ;AAACC,kBAAQ,EAAE,KAAX;AAAkBC,kBAAQ,EAAE,KAA5B;AAAmCC,gBAAM,EAAE,KAA3C;AAAkDC,oBAAU,EAAE,KAA9D;AAAqEC,mBAAS,EAAE,KAAhF;AAAuFC,gBAAM,EAAE;AAA/F,SAAR,CAY8D,CAX9D;;AACA,aAAAC,MAAA,GAAmB,IAAnB;AAGA,aAAAC,GAAA,GAAM,2DAAN;AACA,aAAAC,WAAA,GAAc;AACZC,iBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAE,4BAAgB;AAAlB,WAAhB;AADG,SAAd;AAOE,aAAK/B,SAAL,GAAiB,KAAKZ,MAAL,CAAYI,oBAAZ,GAAmCC,MAAnC,CAA0CC,KAA1C,CAAgDM,SAAjE;AAEA;;;;mCAEM;AAAA;;AACN,eAAKb,IAAL,CAAU6C,IAAV,CAAoB,KAAKH,GAAzB,EAA8B,KAAK7B,SAAnC,EAA8C,KAAK8B,WAAnD,EAAgE5B,SAAhE,CAA0E,UAAAC,IAAI,EAAI;AAEhF,kBAAI,CAACiB,WAAL,GAAmBjB,IAAnB;AACA,kBAAI,CAACyB,MAAL,GAAc,MAAI,CAACR,WAAL,CAAiBa,QAAjB,CAA0BC,KAA1B,CAAgC,GAAhC,CAAd;;AACA,kBAAI,CAACN,MAAL,CAAYO,OAAZ,CAAoB,UAAAC,OAAO,EAAI;AAC7B,kBAAIA,OAAO,KAAK,UAAhB,EAA4B;AAC1B,sBAAI,CAACf,KAAL,CAAWC,QAAX,GAAsB,IAAtB;AACD,eAFD,MAEO,IAAIc,OAAO,KAAK,UAAhB,EAA4B;AACjC,sBAAI,CAACf,KAAL,CAAWE,QAAX,GAAsB,IAAtB;AACD,eAFM,MAEA,IAAIa,OAAO,KAAK,QAAhB,EAA0B;AAC/B,sBAAI,CAACf,KAAL,CAAWG,MAAX,GAAoB,IAApB;AACD,eAFM,MAEA,IAAIY,OAAO,KAAK,YAAhB,EAA8B;AACnC,sBAAI,CAACf,KAAL,CAAWI,UAAX,GAAwB,IAAxB;AACD,eAFM,MAEA,IAAIW,OAAO,KAAK,WAAhB,EAA6B;AAClC,sBAAI,CAACf,KAAL,CAAWK,SAAX,GAAuB,IAAvB;AACD,eAFM,MAEA,IAAIU,OAAO,KAAK,QAAhB,EAA0B;AAC/B,sBAAI,CAACf,KAAL,CAAWM,MAAX,GAAoB,IAApB;AACD;AACF,aAdD;AAeC,WAnBH;AAoBD;;;;;;;uBAzCUR,mB,EAAmB,gI,EAAA,uH;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA,gB;AAAA,c;AAAA,iwL;AAAA;AAAA;ACThC;;AAEA;;AAAO;;AAAc;;AACrB;;AAEC;;AACG;;AACE;;AACE;;AACF;;AACF;;AACF;;AACA;;AAA0C;;AAA0B;;AAGlE;;AACI;;AAEE;;AACE;;AACE;;AAAmB;;AAAU;;AAA0B;;AAAC;;AAAQ;;AAChE;;AACE;;AACF;;AACE;;AACE;;AACF;;AACA;;AACJ;;AACA;;AACI;;AAAmB;;AAAS;;AAA0B;;AAAC;;AAAQ;;AAC/D;;AACE;;AACF;;AACE;;AACE;;AACF;;AACA;;AACJ;;AAEA;;AACE;;AAAuB;;AAAU;;AAA2B;;AAAC;;AAAQ;;AACrE;;AACE;;AACF;;AACE;;AACE;;AACF;;AACA;;AACJ;;AACA;;AACI;;AAAmB;;AAAK;;AAA0B;;AAAC;;AAAQ;;AAC3D;;AACA;;AACE;;AACF;;AACA;;AACF;;AAEA;;AACE;;AAAqB;;AAAc;;AAA0B;;AAAC;;AAAQ;;AACtE;;AACA;;AACA;;AACE;;AACF;;AACF;;AAEA;;AACE;;AAAkB;;AAAI;;AAA0B;;AAAC;;AAAQ;;AACzD;;AACA;;AACE;;AACF;;AACF;;AAEA;;AACE;;AACE;;AAAqB;;AAAO;;AAA0B;;AAAC;;AAAQ;;AAC/D;;AACA;;AACA;;AACF;;AACA;;AACA;;AACE;;AAAmB;;AAAK;;AAA0B;;AAAC;;AAAQ;;AAC3D;;AACA;;AACA;;AACF;;AACA;;AACA;;AACE;;AAAqB;;AAAO;;AAA0B;;AAAC;;AAAQ;;AAC/D;;AACA;;AACA;;AACF;;AACA;;AACF;;AACA;;AACI;;AAAkB;;AAAI;;AAC1B;;AACI;;AACF;;AAEA;;AACE;;AAAuB;;AAAgB;;AACvC;;AACF;;AAEA;;AACE;;AAAiB;;AAAG;;AAAyB;;AAAU;;AAAO;;AAC9D;;AACF;;AAEA;;AACE;;AAAwB;;AAAc;;AACtC;;AACF;;AAEA;;AACA;;AAAI;;AAAuC;;AAC3C;;AACI;;AACA;;AAAmD;;AAAQ;;AAC7D;;AAEA;;AACE;;AACA;;AAAmD;;AAAQ;;AAC7D;;AAEA;;AACE;;AACA;;AAAiD;;AAAM;;AACzD;;AAEA;;AACE;;AACA;;AAAqD;;AAAU;;AACjE;;AAEA;;AACE;;AACA;;AAAoD;;AAAU;;AAChE;;AAEA;;AACE;;AACA;;AAAiD;;AAAM;;AACzD;;AACA;;AACZ;;AAAI;;AAA4C;;AAA0B;;AAAC;;AAAQ;;AAEnF;;AACE;;AACE;;AACA;;AAAkD;;AAAO;;AAC3D;;AACA;;AACE;;AACA;;AAAqD;;AAAU;;AACjE;;AACA;;AACE;;AACA;;AAAmD;;AAAQ;;AAC7D;;AACA;;AACE;;AACA;;AAAiD;;AAAM;;AACzD;;AACF;;AAEA;;AACA;;AAAI;;AAAmB;;AACvB;;AAAqE;;AAAwB;;AAC7F;;AACA;;AAAI;;AAAyC;;AAE7C;;AACE;;AACE;;AAA6B;;AAAK;;AAClC;;AACE;;AACE;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAZF;;AAcJ;;AAEA;;AACE;;AAA4B;;AAAI;;AAChC;;AACF;;AACF;;AAEA;;AACA;;AAAI;;AAAyE;;AAE7E;;AACE;;AACE;;AAA2B;;AAAW;;AACtC;;AAAuB;;AAAM;;AAC7B;;AAAyB;;AAAQ;;AACnC;;AACF;;AACA;;AACA;;AACE;;AAA2H;;AAAK;;AAChI;;AAAuF;;AAAM;;AAC/F;;AAEP;;AACA;;AACD;;AApNE;;AAND;;;;AAO2C;;AAAA;;AAU6D;;AAAA;;AAUC;;AAAA;;AAWS;;AAAA;;AASF;;AAAA;;AASa;;AAAA;;AAS1B;;AAAA;;AASU;;AAAA;;AAOL;;AAAA;;AAOQ;;AAAA;;AAQA;;AAAA;;AAMQ;;AAAA;;AAKC;;AAAA;;AAKH;;AAAA;;AAMf;;AAAA;;AAKC;;AAAA;;AAKY;;AAAA;;AAKS;;AAAA;;AAKF;;AAAA;;AAKN;;AAAA;;AAQA;;AAAA;;AAIM;;AAAA;;AAIJ;;AAAA;;AAIJ;;AAAA;;AAOvC;;AAAA;;AAOhC;;AAAA;;AAmBiF;;AAAA;;;;;;;;;sEDhMjHA,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTf,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEThC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACwBgB;;AACE;;AACF;;;;;;AAQE;;AACE;;AACF;;;;;;AASA;;AACE;;AACF;;;;;;AAMA;;AACE;;AACF;;;;;;AAQA;;AACE;;AACF;;;;;;AAMA;;AACE;;AACF;;;;;;AAOE;;AACA;;AACF;;;;;;AAKE;;AACA;;AACF;;;;;;AAKE;;AACA;;AACF;;;;;;AAME;;AAAwF;;AAA6C;;;;QD5F5I+B,e;;;AAEX,+BAAoBlD,IAApB,EAA8CC,MAA9C,EAA8D;AAAA;;AAA1C,aAAAD,IAAA,GAAAA,IAAA;AAA0B,aAAAC,MAAA,GAAAA,MAAA;AAE9C,aAAAkD,MAAA,GAAc,EAAd;AACA,aAAAL,QAAA,GAAgB,EAAhB;AACA,aAAAJ,GAAA,GAAM,sDAAN;AAED,aAAAC,WAAA,GAAc;AACZC,iBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAE,4BAAgB;AAAlB,WAAhB;AADG,SAAd;AALE;;;;mCASM,CACP;;;iCAEQQ,I,EAAM;AAAA;;AACb,cAAIA,IAAI,CAACC,KAAT,EAAgB;AACf,iBAAKF,MAAL,CAAYL,QAAZ,GAAuBQ,MAAM,CAAC3D,IAAP,CAAY,KAAKmD,QAAjB,EAA2BS,MAA3B,CAAkC,UAACC,CAAD;AAAA,qBAAY,MAAI,CAACV,QAAL,CAAcU,CAAd,CAAZ;AAAA,aAAlC,EAAgEC,QAAhE,EAAvB;AACA,iBAAKzD,IAAL,CAAU6C,IAAV,CAAoB,KAAKH,GAAzB,EAA8B,KAAKS,MAAnC,EAA2C,KAAKR,WAAhD,EAA6D5B,SAA7D,CAAuE,UAAAC,IAAI,EAAI;AAC/E,kBAAIA,IAAI,CAAC,CAAD,CAAJ,GAAU,EAAd,EAAkB;AACjB,sBAAI,CAACf,MAAL,CAAYW,QAAZ,CAAqB,CAAC,YAAD,CAArB,EAAqC;AAAEL,uBAAK,EAAE;AAAEL,wBAAI,EAAEc,IAAI,CAAC,CAAD,CAAZ;AAAiBR,uBAAG,EAAEQ,IAAI,CAAC,CAAD;AAA1B;AAAT,iBAArC;AACA,eAFD,MAEO,IAAIA,IAAI,CAAC,CAAD,CAAJ,GAAU,EAAd,EAAkB;AACxB,sBAAI,CAACf,MAAL,CAAYW,QAAZ,CAAqB,CAAC,cAAD,CAArB,EAAuC;AAAEL,uBAAK,EAAE;AAAEL,wBAAI,EAAEc,IAAI,CAAC,CAAD,CAAZ;AAAiBR,uBAAG,EAAEQ,IAAI,CAAC,CAAD;AAA1B;AAAT,iBAAvC;AACA;AACA,aAND;AAOA,WATD,MASO;AACL0C,iBAAK,CAAC,iCAAD,CAAL;AACD;AAEF;;;;;;;uBA7BWR,e,EAAe,gI,EAAA,uH;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,gB;AAAA,c;AAAA,+9M;AAAA;AAAA;;;ACV5B;;AAEA;;AAAO;;AAAe;;AACtB;;AAEC;;AACG;;AACE;;AACE;;AACF;;AACF;;AACF;;AACA;;AAA0C;;AAAW;;AAGnD;;AACI;;AAEE;;AAA0D;AAAA;;AAAA;;AAAA,mBAAc,IAAAS,QAAA,KAAd;AAAmC,WAAnC;;AACxD;;AACE;;AAAmB;;AAAU;;AAA0B;;AAAC;;AAAQ;;AAChE;;AACE;;AAAqG;AAAA;AAAA;;AAArG;;AACF;;AACE;;AAGA;;AACJ;;AACA;;AACI;;AAAmB;;AAAS;;AAA0B;;AAAC;;AAAQ;;AAC/D;;AACE;;AAAyF;AAAA;AAAA;;AAAzF;;AACF;;AACE;;AAGA;;AACJ;;AAEA;;AACE;;AAAuB;;AAAU;;AAA2B;;AAAC;;AAAQ;;AACrE;;AACE;;AAAkG;AAAA;AAAA;;AAAlG;;AACF;;AACE;;AAGA;;AACJ;;AACA;;AACI;;AAAmB;;AAAK;;AAA0B;;AAAC;;AAAQ;;AAC3D;;AAAgG;AAAA;AAAA;;AAAhG;;AACA;;AAGA;;AACF;;AAEA;;AACE;;AAAqB;;AAAc;;AAA0B;;AAAC;;AAAQ;;AACtE;;AAA4G;AAAA;AAAA;;AAA5G;;AACA;;AACA;;AAGF;;AAEA;;AACE;;AAAkB;;AAAI;;AAA0B;;AAAC;;AAAQ;;AACzD;;AAAkF;AAAA;AAAA;;AAAlF;;AACA;;AAGF;;AAEA;;AACE;;AACE;;AAAqB;;AAAO;;AAA0B;;AAAC;;AAAQ;;AAC/D;;AAA2F;AAAA;AAAA;;AAA3F;;AACA;;AAGF;;AACA;;AACE;;AAAmB;;AAAK;;AAA0B;;AAAC;;AAAQ;;AAC3D;;AAAqF;AAAA;AAAA;;AAArF;;AACA;;AAGF;;AACA;;AACE;;AAAqB;;AAAO;;AAA0B;;AAAC;;AAAQ;;AAC/D;;AAA6F;AAAA;AAAA;;AAA7F;;AACA;;AAGF;;AACF;;AACA;;AACI;;AAAkB;;AAAI;;AAC1B;;AAAkG;AAAA;AAAA;;AAAlG;;AACI;;AACF;;AAEA;;AACE;;AAAuB;;AAAgB;;AACvC;;AAAqG;AAAA;AAAA;;AAArG;;AACF;;AAEA;;AACE;;AAAiB;;AAAG;;AAAyB;;AAAU;;AAAO;;AAC9D;;AAAsG;AAAA;AAAA;;AAAtG;;AACF;;AAEA;;AACE;;AAAwB;;AAAc;;AACtC;;AAAmG;AAAA;AAAA;;AAAnG;;AACF;;AAEA;;AACA;;AAAI;;AAAuC;;AAC3C;;AACI;;AAAmG;AAAA;AAAA;;AAAnG;;AACA;;AAAmD;;AAAQ;;AAC7D;;AAEA;;AACE;;AAAmG;AAAA;AAAA;;AAAnG;;AACA;;AAAmD;;AAAQ;;AAC7D;;AAEA;;AACE;;AAA+F;AAAA;AAAA;;AAA/F;;AACA;;AAAiD;;AAAM;;AACzD;;AAEA;;AACE;;AAAuG;AAAA;AAAA;;AAAvG;;AACA;;AAAqD;;AAAU;;AACjE;;AAEA;;AACE;;AAAqG;AAAA;AAAA;;AAArG;;AACA;;AAAoD;;AAAU;;AAChE;;AAEA;;AACE;;AAA+F;AAAA;AAAA;;AAA/F;;AACA;;AAAiD;;AAAM;;AACzD;;AACA;;AACZ;;AAAI;;AAA4C;;AAA0B;;AAAC;;AAAQ;;AAEnF;;AACE;;AACE;;AAA0G;AAAA;AAAA;;AAA1G;;AACA;;AAAkD;;AAAO;;AAC3D;;AACA;;AACE;;AAAgH;AAAA;AAAA;;AAAhH;;AACA;;AAAqD;;AAAU;;AACjE;;AACA;;AACE;;AAA4G;AAAA;AAAA;;AAA5G;;AACA;;AAAmD;;AAAQ;;AAC7D;;AACA;;AACE;;AAAwG;AAAA;AAAA;;AAAxG;;AACA;;AAAiD;;AAAM;;AACzD;;AACF;;AAEA;;AACA;;AAAI;;AAAmB;;AACvB;;AAA4D;AAAA;AAAA;;AAA8B;;AAC1F;;AACA;;AAAI;;AAAyC;;AAE7C;;AACE;;AACE;;AAA6B;;AAAK;;AAClC;;AAAiC;AAAA;AAAA;;AAAjC;;AACE;;AACE;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAZF;;AAcJ;;AAEA;;AACE;;AAA4B;;AAAI;;AAChC;;AAAkH;AAAA;AAAA;;AAAlH;;AACF;;AACF;;AAEA;;AACA;;AAAI;;AAAyE;;AAE7E;;AACE;;AAAwC;AAAA;AAAA;;AACtC;;AAA2B;;AAAW;;AACtC;;AAAuB;;AAAM;;AAC7B;;AAAyB;;AAAQ;;AACnC;;AACF;;AACA;;AACA;;AACE;;AAA2H;;AAAK;;AAChI;;AAAuF;;AAAM;;AAC/F;;AAEP;;AACA;;AACD;;AApNE;;AAND;;;;;;;;;;;;;;;;;;;;;;;;AAiBoH;;AAAA;;AAEhG;;AAAA;;AAQsF;;AAAA;;AAEpF;;AAAA;;AAS6F;;AAAA;;AAE7F;;AAAA;;AAO2F;;AAAA;;AAC3F;;AAAA;;AAQuG;;AAAA;;AAEvG;;AAAA;;AAO6E;;AAAA;;AAC7E;;AAAA;;AAQwF;;AAAA;;AACtF;;AAAA;;AAMgF;;AAAA;;AAChF;;AAAA;;AAMwF;;AAAA;;AACxF;;AAAA;;AAOyF;;AAAA;;AACzF;;AAAA;;AAKgG;;AAAA;;AAKC;;AAAA;;AAKH;;AAAA;;AAME;;AAAA;;AAKA;;AAAA;;AAKJ;;AAAA;;AAKQ;;AAAA;;AAKF;;AAAA;;AAKN;;AAAA;;AAQC;;AAAA;;AAIM;;AAAA;;AAIJ;;AAAA;;AAIJ;;AAAA;;AAOhD;;AAAA;;AAOvB;;AAAA;;AAmBiF;;AAAA;;AAQ5E;;AAAA;;;;;;;;;sEDvMrCT,e,EAAe;cAL3B,uDAK2B;eALjB;AACTjC,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEV5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACmBY;;AAAsB;;AAA8B;;;;;;;;AACpD;;AACI;;AAAI;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAwB;;AAAQ;;AACxC;;;;;;AADgC;;AAAA;;;;QDZ/ByC,sB;;;AAOX,sCAAoB5D,IAApB,EAA8CC,MAA9C,EAA8D;AAAA;;AAA1C,aAAAD,IAAA,GAAAA,IAAA;AAA0B,aAAAC,MAAA,GAAAA,MAAA;AAL9C,aAAAC,IAAA,GAAO,IAAP;AACA,aAAAC,MAAA,GAAS,IAAT;AACA,aAAAC,IAAA,GAAO,IAAP;AAIE,aAAKF,IAAL,GAAY,KAAKD,MAAL,CAAYI,oBAAZ,GAAmCC,MAAnC,CAA0CC,KAA1C,CAAgDL,IAA5D;AACA,aAAKC,MAAL,GAAc,KAAKF,MAAL,CAAYI,oBAAZ,GAAmCC,MAAnC,CAA0CC,KAA1C,CAAgDC,GAA9D;AACD;;;;gCAEOC,K,EAAO;AACb,eAAKR,MAAL,CAAYW,QAAZ,CAAqB,CAAC,aAAD,CAArB,EAAsC;AAAEL,iBAAK,EAAE;AAAEM,uBAAS,EAAEJ;AAAb;AAAT,WAAtC;AACD;;;mCACO;AAAA;;AACN,eAAKT,IAAL,CAAUc,GAAV,CAAmB,0DAAnB,EAA+EC,SAA/E,CAAyF,UAAAC,IAAI,EAAI;AACjG,kBAAI,CAACZ,IAAL,GAAYY,IAAZ;AACC,WAFD;AAGD;;;;;;;uBAnBU4C,sB,EAAsB,gI,EAAA,uH;AAAA,K;;;YAAtBA,sB;AAAsB,0C;AAAA,e;AAAA,a;AAAA,ypB;AAAA;AAAA;ACTnC;;AACA;;AAEA;;AAAO;;AAAsB;;AAC7B;;AAEC;;AACG;;AACE;;AACE;;AACF;;AACF;;AACF;;AACE;;AAA0C;;AAAsB;;AAChE;;AACQ;;AAAI;;AAAiB;;AACrB;;AAAI;;AAA+B;;AACnC;;AAAI;;AAAe;;AACnB;;AAAI;;AAAiC;;AACrC;;AACA;;AAKR;;AACA;;AACA;;AAEJ;;;;AAZgB;;AAAA;;AACA;;AAAA;;AACD;;AAAA;;AACC;;AAAA;;;;;;;;;sEDXHA,sB,EAAsB;cALlC,uDAKkC;eALxB;AACT3C,kBAAQ,EAAE,qBADD;AAETC,qBAAW,EAAE,kCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAKwB,Q;;;;;;;;;;;;;;;;;;;;;;;;AETnC;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAM0C,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAItD,OAAO,CAACuD,KAAR,CAAcD,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-acknowledge',\n  templateUrl: './acknowledge.component.html',\n  styleUrls: ['./acknowledge.component.css']\n})\nexport class AcknowledgeComponent implements OnInit {\n\n  mean = null;\n  stdDev = null;\n  list = null;\n\n\n  constructor(private http: HttpClient, private router: Router) {\n    this.mean = this.router.getCurrentNavigation().extras.state.mean;\n    this.stdDev = this.router.getCurrentNavigation().extras.state.std;\n  }\n\n  onClick(param) {\n\n    console.log('param is:' + param);\n    this.router.navigate(['/readSurvey'], { state: { studentid: param } });\n  }\n  ngOnInit(): void {\n    this.http.get<any>('http://localhost:8080/ApiTesting1/rest/api/getStudentsID').subscribe(data => {\n    this.list = data;\n    });\n  }\n\n}\n","<meta charset=\"ISO-8859-1\">\n<html>\n\n<title>Simple Acknowledgement</title>\n<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\" integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\n \n <div class=\"bg-light\">\n    <div class=\"py-3 text-center\" style=\"background-color:#FFCC33 \">\n      <div style=\"background-color: #006633 \">\n        <img class=\"d-block mx-auto \" src=\"assets/img/mason-logo2.png\" alt=\"George Mason Logo\" width=\"70\" height=\"70\">\n      </div>\n    </div>\n  <div class=\"container\">\n    <h2 class=\"py-2 text-center custom-style\">Thanks for submitting the form</h2> \n    <body >\n            \n            <h4>Mean : {{mean}}</h4>\n            <h4>Standard Deviation is: {{stdDev}}</h4>\n            <p *ngIf=\"list==null\">Fetching data from database...</p>\n            <ul *ngFor=\"let each of list\" style=\"height: 20px;\">\n                <li (click)=\"onClick(each)\">{{each}}</li>\n            </ul>\n            \n\n    </body>\n    </div>\n    </div>\n\n</html>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { WinnerAckListComponent} from './winner-ack-list/winner-ack-list.component';\r\nimport { SurveyComponent} from './survey/survey.component';\r\nimport { AcknowledgeComponent } from './acknowledge/acknowledge.component';\r\nimport { ReadSurveyComponent } from './read-survey/read-survey.component';\r\n\r\n\r\nconst routes: Routes = [{path: 'winnerAck', component: WinnerAckListComponent},\r\n{path: '', component: SurveyComponent},\r\n{path: 'acknowledge', component: AcknowledgeComponent},\r\n{path: 'readSurvey', component: ReadSurveyComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'assign4';\r\n}\r\n","\r\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport { AppComponent } from './app.component';\r\nimport { SurveyComponent } from './survey/survey.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { WinnerAckListComponent } from './winner-ack-list/winner-ack-list.component';\r\nimport { AcknowledgeComponent } from './acknowledge/acknowledge.component';\r\nimport { ReadSurveyComponent } from './read-survey/read-survey.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SurveyComponent,\r\n    WinnerAckListComponent,\r\n    AcknowledgeComponent,\r\n    ReadSurveyComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\n\n@Component({\n  selector: 'app-read-survey',\n  templateUrl: './read-survey.component.html',\n  styleUrls: ['./read-survey.component.css']\n})\nexport class ReadSurveyComponent implements OnInit {\n  studentid = null;\n  studentData = null;\n  check = {Students: false, Location: false, Campus: false, Atmosphere: false, Dormrooms: false, Sports: false};\n  // tslint:disable-next-line:ban-types\n  tokens: String[] = null;\n\n\n  url = 'http://localhost:8080/ApiTesting1/rest/api/getStudentData';\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n\n\n  constructor(private http: HttpClient, private router: Router) {\n    this.studentid = this.router.getCurrentNavigation().extras.state.studentid;\n\n   }\n\n  ngOnInit(): void {\n    this.http.post<any>(this.url, this.studentid, this.httpOptions).subscribe(data => {\n\n      this.studentData = data;\n      this.tokens = this.studentData.likemost.split(',');\n      this.tokens.forEach(element => {\n        if (element === 'Students') {\n          this.check.Students = true;\n        } else if (element === 'Location') {\n          this.check.Location = true;\n        } else if (element === 'Campus') {\n          this.check.Campus = true;\n        } else if (element === 'Atmosphere') {\n          this.check.Atmosphere = true;\n        } else if (element === 'Dormrooms') {\n          this.check.Dormrooms = true;\n        } else if (element === 'Sports') {\n          this.check.Sports = true;\n        }\n      });\n      });\n  }\n\n}\n","<meta charset=\"ISO-8859-1\">\n\n<title>Reading Survey</title>\n<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\" integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\n \n <div class=\"bg-light\">\n    <div class=\"py-3 text-center\" style=\"background-color:#FFCC33 \">\n      <div style=\"background-color: #006633 \">\n        <img class=\"d-block mx-auto \" src=\"assets/img/mason-logo2.png\" alt=\"George Mason Logo\" width=\"70\" height=\"70\">\n      </div>\n    </div>\n  <div class=\"container\">\n  <h2 class=\"py-2 text-center custom-style\">Reading {{studentid}} Form</h2> \n\n\n    <div class=\"row\">\n        <div class=\"col-md-8 mx-auto\">\n\n          <form class=\"py-3 needs-validation\" autocomplete=\"on\" >\n            <div class=\"mb-3\">\n              <label for=\"fname\">First Name<label style=\"color: red\">*</label></label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control\" id=\"fname\" name=\"fname\" placeholder=\"First Name\" value=\"{{studentData.fname}}\" readonly>\n              </div>\n                <div class=\"invalid-feedback\" style=\"width: 100%;\">\n                  Please enter First Name.\n                </div>\n                <div id=\"errorfName\" style=\"color: red\"></div>\n            </div>\n            <div class=\"mb-3\">\n                <label for=\"lname\">Last Name<label style=\"color: red\">*</label></label>\n                <div class=\"input-group\">\n                  <input type=\"text\" class=\"form-control\" id=\"lname\" name=\"lname\" placeholder=\"Last Name\" value=\"{{studentData.lname}}\" readonly>\n                </div>\n                  <div class=\"invalid-feedback\" style=\"width: 100%;\">\n                    Please enter Last Name.\n                  </div>\n                  <div id=\"errorlName\" style=\"color: red\"></div>\n              </div>\n      \n              <div class=\"mb-3\">\n                <label for=\"studentid\">Student ID<label style=\"color: red\" >*</label></label>\n                <div class=\"input-group\">\n                  <input type=\"text\" class=\"form-control\" id=\"studentid\" name=\"studentid\" placeholder=\"G01122334\"  value=\"{{studentData.studentid}}\" readonly >\n                </div>\n                  <div class=\"invalid-feedback\" style=\"width: 100%;\">\n                    Please enter Student ID.\n                  </div>\n                  <div id=\"errorStudentid\" style=\"color: red\"></div>\n              </div>\n              <div class=\"mb-3\">\n                  <label for=\"email\">Email<label style=\"color: red\">*</label></label>\n                  <input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" placeholder=\"you@example.com\" value=\"{{studentData.email}}\" readonly>\n                  <div class=\"invalid-feedback\">\n                    Please enter a valid email address.\n                  </div>\n                  <div id=\"errorEmail\" style=\"color: red\"></div>\n                </div>\n        \n                <div class=\"mb-3\">\n                  <label for=\"address\">Street Address<label style=\"color: red\">*</label></label>\n                  <input type=\"text\" class=\"form-control\" id=\"streetaddress\" name=\"streetaddress\" placeholder=\"1234 Main St\"  value=\"{{studentData.streetaddress}}\" readonly>\n                  <div id=\"errorStreet\" style=\"color: red\"></div>\n                  <div class=\"invalid-feedback\">\n                    Please enter your street address.\n                  </div>\n                </div>\n        \n                <div class=\"mb-3\">\n                  <label for=\"city\">City<label style=\"color: red\">*</label></label>\n                  <input type=\"text\" class=\"form-control\" id=\"city\" name=\"city\" placeholder=\"City\"  value=\"{{studentData.city}}\" readonly>\n                  <div class=\"invalid-feedback\" style=\"width: 100%;\">\n                    Please enter city.\n                  </div>\n                </div>\n        \n                <div class=\"row\">\n                  <div class=\"col-md-5 mb-3\">\n                    <label for=\"country\">Country<label style=\"color: red\">*</label></label>\n                    <input type=\"text\" class=\"form-control\" id=\"country\" name=\"country\" placeholder=\"country\" value=\"{{studentData.country}}\" readonly>\n                    <div class=\"invalid-feedback\" style=\"width: 100%;\">\n                    Please enter country.\n                  </div>\n                  </div>\n                  <div class=\"col-md-4 mb-3\">\n                    <label for=\"state\">State<label style=\"color: red\">*</label></label>\n                    <input type=\"text\" class=\"form-control\" id=\"state\" name=\"state\" placeholder=\"state\"  value=\"{{studentData.state}}\" readonly>\n                    <div class=\"invalid-feedback\" style=\"width: 100%;\">\n                    Please enter state.\n                  </div>\n                  </div>\n                  <div class=\"col-md-3 mb-3\">\n                    <label for=\"zipcode\">Zipcode<label style=\"color: red\">*</label></label>\n                    <input type=\"number\" class=\"form-control\" id=\"zipcode\" name=\"zipcode\" placeholder=\"zipcode\"  value=\"{{studentData.zipcode}}\" readonly>\n                    <div class=\"invalid-feedback\" style=\"width: 100%;\">\n                    Please enter zipcode.\n                  </div>\n                  </div>\n                </div>\n                <div class=\"mb-3\">\n                    <label for=\"data\">Data</label>\n                <input type=\"text\" class=\"form-control\" id=\"data\" name=\"data\" placeholder=\"1,2,3,4,5,6,7,8,9,10\" value=\"{{studentData.data}}\" readonly >\n                    <div id=\"errorMsg\" style=\"color: red\"></div>\n                  </div>\n          \n                  <div class=\"mb-3\">\n                    <label for=\"telephone\">Telephone number</label>\n                    <input type=\"number\" class=\"form-control\" id=\"telephone\" name=\"telephone\" placeholder=\"555-555-5555\" value=\"{{studentData.telephone}}\" readonly >\n                  </div>\n          \n                  <div class=\"mb-3\">\n                    <label for=\"url\">URL<span class=\"text-muted\">(Optional)</span></label>\n                    <input type=\"text\" class=\"form-control\" id=\"url\" name=\"url\" placeholder=\"http://username_example.com\" value=\"{{studentData.url}}\" readonly>\n                  </div>\n          \n                  <div class=\"mb-3\">\n                    <label for=\"surveydate\">Date of Survey</label>\n                    <input type=\"date\" class=\"form-control\" id=\"surveydate\" name=\"surveydate\" placeholder=\"mm-dd-yyyy\" value=\"{{studentData.surveydate}}\" readonly>\n                  </div>\n          \n                  <hr class=\"mb-4\">\n                  <h5>What did you like most about the campus</h5>\n                  <div class=\"custom-control custom-checkbox\">\n                      <input type=\"checkbox\" class=\"custom-control-input\" id=\"students\" name=\"likemost\" [checked]=\"check.Students\">\n                      <label class=\"custom-control-label\" for=\"students\">Students</label>\n                    </div>\n            \n                    <div class=\"custom-control custom-checkbox\">\n                      <input type=\"checkbox\" class=\"custom-control-input\" id=\"location\" name=\"likemost\"  [checked]=\"check.Location\">\n                      <label class=\"custom-control-label\" for=\"location\">Location</label>\n                    </div>\n            \n                    <div class=\"custom-control custom-checkbox\">\n                      <input type=\"checkbox\" class=\"custom-control-input\" id=\"campus\" name=\"likemost\" value=\"Campus\" [checked]=\"check.Campus\" >\n                      <label class=\"custom-control-label\" for=\"campus\">Campus</label>\n                    </div>\n            \n                    <div class=\"custom-control custom-checkbox\">\n                      <input type=\"checkbox\" class=\"custom-control-input\" id=\"atmosphere\" name=\"likemost\" value=\"Atmosphere\"  [checked]=\"check.Atmosphere\">\n                      <label class=\"custom-control-label\" for=\"atmosphere\">Atmosphere</label>\n                    </div>\n            \n                    <div class=\"custom-control custom-checkbox\">\n                      <input type=\"checkbox\" class=\"custom-control-input\" id=\"dormrooms\" name=\"likemost\" value=\"Dormrooms\"  [checked]=\"check.Dormrooms\">\n                      <label class=\"custom-control-label\" for=\"dormrooms\">Dorm-rooms</label>\n                    </div>\n            \n                    <div class=\"custom-control custom-checkbox\">\n                      <input type=\"checkbox\" class=\"custom-control-input\" id=\"sports\" name=\"likemost\" value=\"Sports\"  [checked]=\"check.Sports\">\n                      <label class=\"custom-control-label\" for=\"sports\">Sports</label>\n                    </div>\n                    <hr class=\"mb-4\">\n        <h5>How did you get interested in the university<label style=\"color: red\">*</label></h5>\n\n        <div class=\"d-block my-3\">\n          <div class=\"custom-control custom-radio\">\n            <input id=\"friends\" name=\"interestInUniversity\" type=\"radio\" class=\"custom-control-input\" value=\"Friends\" [ngModel]=\"studentData.interestInUniversity\">\n            <label class=\"custom-control-label\" for=\"friends\">Friends</label>\n          </div>\n          <div class=\"custom-control custom-radio\">\n            <input id=\"television\" name=\"interestInUniversity\" type=\"radio\" class=\"custom-control-input\" value=\"Television\" [ngModel]=\"studentData.interestInUniversity\">\n            <label class=\"custom-control-label\" for=\"television\">Television</label>\n          </div>\n          <div class=\"custom-control custom-radio\">\n            <input id=\"internet\" name=\"interestInUniversity\" type=\"radio\" class=\"custom-control-input\" value=\"Internet\" [ngModel]=\"studentData.interestInUniversity\">\n            <label class=\"custom-control-label\" for=\"internet\">Internet</label>\n          </div>\n          <div class=\"custom-control custom-radio\">\n            <input id=\"others\" name=\"interestInUniversity\" type=\"radio\" class=\"custom-control-input\" value=\"Others\" [ngModel]=\"studentData.interestInUniversity\">\n            <label class=\"custom-control-label\" for=\"others\">Others</label>\n          </div>\n        </div>\n\n        <hr class=\"mb-4\">\n        <h5>Additional Comments</h5>\n        <textarea id=\"comments\" name=\"comments\" rows=\"4\" cols=\"100\" readonly>{{studentData.comments}}</textarea>\n        <hr class=\"mb-4\">\n        <h5>Please select high-school graduation date</h5>\n\n        <div class=\"row\">\n          <div class=\"col-md-6 mb-3\">\n            <label for=\"graduationMonth\">Month</label>\n            <input list=\"month\" name=\"month\" value=\"{{studentData.month}}\" readonly>\n              <datalist id=\"month\">\n                <option value=\"January\">\n                <option value=\"February\">\n                <option value=\"March\">\n                <option value=\"April\">\n                <option value=\"May\">\n                <option value=\"June\">\n                <option value=\"July\">\n                <option value=\"August\">\n                <option value=\"September\">\n                <option value=\"October\">\n                <option value=\"November\">\n                <option value=\"December\">\n              </datalist>\n          </div>\n\n          <div class=\"col-md-6 mb-3\">\n            <label for=\"graduationYear\">Year</label>\n            <input type=\"number\"  min=\"1950\" max=\"2020\" step=\"1\" id=\"graduationYear\" name=\"graduationYear\" placeholder=\"yyyy\" value=\"{{studentData.graduationYear}}\" readonly>\n          </div>\n        </div>\n\n        <hr class=\"mb-4\">\n        <h5>How likely are you to recommend this school to other prospective students</h5>\n\n        <div class=\"mb-3\">\n          <select id=\"recommend\" name=\"recommend\" >\n            <option value=\"veryLikely\">Very Likely</option>\n            <option value=\"likely\">Likely</option>\n            <option value=\"unlikely\">Unlikely</option>\n          </select>\n        </div>\n        <hr class=\"mb-4\">\n        <div class=\"row \">\n          <button class=\"col-md-5 btn btn-primary btn-lg btn-block\" type=\"button\"  style=\"margin-top: 0.5rem; margin-right: 0.5rem\" >Reset</button>\n          <button class=\"col-md-5 btn btn-primary btn-lg btn-block\" type=\"submit\" value=\"Submit\">Submit</button>\n        </div>\n        \n </form>\n </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-survey',\n  templateUrl: './survey.component.html',\n  styleUrls: ['./survey.component.css']\n})\nexport class SurveyComponent implements OnInit {\n\n  constructor(private http: HttpClient, private router: Router) {\n  }\n  record: any = {};\n  likemost: any = {};\n  url = 'http://localhost:8080/ApiTesting1/rest/api/putRecord';\n\n httpOptions = {\n   headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n };\n\n ngOnInit(): void {\n }\n\n onSubmit(form) {\n   if (form.valid) {\n    this.record.likemost = Object.keys(this.likemost).filter((k: any) => this.likemost[k]).toString();\n    this.http.post<any>(this.url, this.record, this.httpOptions).subscribe(data => {\n    if (data[0] > 90) {\n     this.router.navigate(['/winnerAck'], { state: { mean: data[0], std: data[1] } });\n    } else if (data[0] < 90) {\n     this.router.navigate(['/acknowledge'], { state: { mean: data[0], std: data[1] } });\n    }\n    });\n   } else {\n     alert('Required fields must be entered');\n   }\n\n }\n}\n","<meta charset=\"ISO-8859-1\">\n\n<title>GMU Survey Form</title>\n<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\" integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\n \n <div class=\"bg-light\">\n    <div class=\"py-3 text-center\" style=\"background-color:#FFCC33 \">\n      <div style=\"background-color: #006633 \">\n        <img class=\"d-block mx-auto \" src=\"assets/img/mason-logo2.png\" alt=\"George Mason Logo\" width=\"70\" height=\"70\">\n      </div>\n    </div>\n  <div class=\"container\">\n  <h2 class=\"py-2 text-center custom-style\">Survey Form</h2> \n\n\n    <div class=\"row\">\n        <div class=\"col-md-8 mx-auto\">\n\n          <form class=\"py-3 needs-validation\" #studentForm=\"ngForm\" (ngSubmit) = \"onSubmit(studentForm)\" autocomplete=\"on\" >\n            <div class=\"mb-3\">\n              <label for=\"fname\">First Name<label style=\"color: red\">*</label></label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control\" id=\"fname\" name=\"fname\" placeholder=\"First Name\"  autofocus  [(ngModel)]=\"record.fname\" #fname=\"ngModel\" required>\n              </div>\n                <div *ngIf=\"fname.invalid && (fname.touched||fname.dirty)\"  style=\"color: red;width: 100%;\">\n                  Please enter First Name.\n                </div>\n                <div id=\"errorfName\" style=\"color: red\"></div>\n            </div>\n            <div class=\"mb-3\">\n                <label for=\"lname\">Last Name<label style=\"color: red\">*</label></label>\n                <div class=\"input-group\">\n                  <input type=\"text\" class=\"form-control\" id=\"lname\" name=\"lname\" placeholder=\"Last Name\"  [(ngModel)]=\"record.lname\" #lname=\"ngModel\" required>\n                </div>\n                  <div *ngIf=\"lname.invalid && (lname.touched||lname.dirty)\" style=\"color: red;width: 100%;\">\n                    Please enter Last Name.\n                  </div>\n                  <div id=\"errorlName\" style=\"color: red\"></div>\n              </div>\n      \n              <div class=\"mb-3\">\n                <label for=\"studentid\">Student ID<label style=\"color: red\" >*</label></label>\n                <div class=\"input-group\">\n                  <input type=\"text\" class=\"form-control\" id=\"studentid\" name=\"studentid\" placeholder=\"G01122334\"   [(ngModel)]=\"record.studentid\" #studentid=\"ngModel\" required>\n                </div>\n                  <div *ngIf=\"studentid.invalid && (studentid.touched||studentid.dirty)\" style=\"color: red;width: 100%;\">\n                    Please enter Student ID.\n                  </div>\n                  <div id=\"errorStudentid\" style=\"color: red\"></div>\n              </div>\n              <div class=\"mb-3\">\n                  <label for=\"email\">Email<label style=\"color: red\">*</label></label>\n                  <input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" placeholder=\"you@example.com\"  [(ngModel)]=\"record.email\" #email=\"ngModel\" required>\n                  <div *ngIf=\"email.invalid && (email.touched||email.dirty)\" style=\"color: red;width: 100%;\">\n                    Please enter a valid email address.\n                  </div>\n                  <div id=\"errorEmail\" style=\"color: red\"></div>\n                </div>\n        \n                <div class=\"mb-3\">\n                  <label for=\"address\">Street Address<label style=\"color: red\">*</label></label>\n                  <input type=\"text\" class=\"form-control\" id=\"streetaddress\" name=\"streetaddress\" placeholder=\"1234 Main St\"  [(ngModel)]=\"record.streetaddress\" #streetaddress=\"ngModel\" required>\n                  <div id=\"errorStreet\" style=\"color: red\"></div>\n                  <div *ngIf=\"streetaddress.invalid && (streetaddress.touched||streetaddress.dirty)\" style=\"color: red;width: 100%;\">\n                    Please enter your street address.\n                  </div>\n                </div>\n        \n                <div class=\"mb-3\">\n                  <label for=\"city\">City<label style=\"color: red\">*</label></label>\n                  <input type=\"text\" class=\"form-control\" id=\"city\" name=\"city\" placeholder=\"City\"  [(ngModel)]=\"record.city\" #city=\"ngModel\" required>\n                  <div *ngIf=\"city.invalid && (city.touched||city.dirty)\" style=\"color: red;width: 100%;\">\n                    Please enter city.\n                  </div>\n                </div>\n        \n                <div class=\"row\">\n                  <div class=\"col-md-5 mb-3\">\n                    <label for=\"country\">Country<label style=\"color: red\">*</label></label>\n                    <input type=\"text\" class=\"form-control\" id=\"country\" name=\"country\" placeholder=\"country\"  [(ngModel)]=\"record.country\" #country=\"ngModel\" required>\n                    <div *ngIf=\"country.invalid && (country.touched||country.dirty)\" style=\"color: red;width: 100%;\">\n                    Please enter country.\n                  </div>\n                  </div>\n                  <div class=\"col-md-4 mb-3\">\n                    <label for=\"state\">State<label style=\"color: red\">*</label></label>\n                    <input type=\"text\" class=\"form-control\" id=\"state\" name=\"state\" placeholder=\"state\"  [(ngModel)]=\"record.state\" #state=\"ngModel\" required>\n                    <div *ngIf=\"state.invalid && (state.touched||state.dirty)\" style=\"color: red;width: 100%;\">\n                    Please enter state.\n                  </div>\n                  </div>\n                  <div class=\"col-md-3 mb-3\">\n                    <label for=\"zipcode\">Zipcode<label style=\"color: red\">*</label></label>\n                    <input type=\"number\" class=\"form-control\" id=\"zipcode\" name=\"zipcode\" placeholder=\"zipcode\"  [(ngModel)]=\"record.zipcode\" #zipcode=\"ngModel\" required>\n                    <div *ngIf=\"zipcode.invalid && (zipcode.touched||zipcode.dirty)\" style=\"color: red;width: 100%;\">\n                    Please enter zipcode.\n                  </div>\n                  </div>\n                </div>\n                <div class=\"mb-3\">\n                    <label for=\"data\">Data</label>\n                <input type=\"text\" class=\"form-control\" id=\"data\" name=\"data\" placeholder=\"1,2,3,4,5,6,7,8,9,10\"  [(ngModel)]=\"record.data\" #data=\"ngModel\" required>\n                    <div *ngIf=\"data.invalid && (data.touched||data.dirty)\" style=\"color: red;width: 100%;\">Please Enter atleast 10 numbers in data field</div>\n                  </div>\n          \n                  <div class=\"mb-3\">\n                    <label for=\"telephone\">Telephone number</label>\n                    <input type=\"number\" class=\"form-control\" id=\"telephone\" name=\"telephone\" placeholder=\"555-555-5555\" [(ngModel)]=\"record.telephone\">\n                  </div>\n          \n                  <div class=\"mb-3\">\n                    <label for=\"url\">URL<span class=\"text-muted\">(Optional)</span></label>\n                    <input type=\"text\" class=\"form-control\" id=\"url\" name=\"url\" placeholder=\"http://username_example.com\" [(ngModel)]=\"record.url\">\n                  </div>\n          \n                  <div class=\"mb-3\">\n                    <label for=\"surveydate\">Date of Survey</label>\n                    <input type=\"date\" class=\"form-control\" id=\"surveydate\" name=\"surveydate\" placeholder=\"mm-dd-yyyy\" [(ngModel)]=\"record.surveydate\">\n                  </div>\n          \n                  <hr class=\"mb-4\">\n                  <h5>What did you like most about the campus</h5>\n                  <div class=\"custom-control custom-checkbox\">\n                      <input type=\"checkbox\" class=\"custom-control-input\" id=\"students\" name=\"likemost\" value=\"Students\" [(ngModel)]=\"likemost.Students\">\n                      <label class=\"custom-control-label\" for=\"students\">Students</label>\n                    </div>\n            \n                    <div class=\"custom-control custom-checkbox\">\n                      <input type=\"checkbox\" class=\"custom-control-input\" id=\"location\" name=\"likemost\" value=\"Location\" [(ngModel)]=\"likemost.Location\">\n                      <label class=\"custom-control-label\" for=\"location\">Location</label>\n                    </div>\n            \n                    <div class=\"custom-control custom-checkbox\">\n                      <input type=\"checkbox\" class=\"custom-control-input\" id=\"campus\" name=\"likemost\" value=\"Campus\" [(ngModel)]=\"likemost.Campus\">\n                      <label class=\"custom-control-label\" for=\"campus\">Campus</label>\n                    </div>\n            \n                    <div class=\"custom-control custom-checkbox\">\n                      <input type=\"checkbox\" class=\"custom-control-input\" id=\"atmosphere\" name=\"likemost\" value=\"Atmosphere\" [(ngModel)]=\"likemost.Atmosphere\">\n                      <label class=\"custom-control-label\" for=\"atmosphere\">Atmosphere</label>\n                    </div>\n            \n                    <div class=\"custom-control custom-checkbox\">\n                      <input type=\"checkbox\" class=\"custom-control-input\" id=\"dormrooms\" name=\"likemost\" value=\"Dormrooms\" [(ngModel)]=\"likemost.Dormrooms\">\n                      <label class=\"custom-control-label\" for=\"dormrooms\">Dorm-rooms</label>\n                    </div>\n            \n                    <div class=\"custom-control custom-checkbox\">\n                      <input type=\"checkbox\" class=\"custom-control-input\" id=\"sports\" name=\"likemost\" value=\"Sports\" [(ngModel)]=\"likemost.Sports\">\n                      <label class=\"custom-control-label\" for=\"sports\">Sports</label>\n                    </div>\n                    <hr class=\"mb-4\">\n        <h5>How did you get interested in the university<label style=\"color: red\">*</label></h5>\n\n        <div class=\"d-block my-3\">\n          <div class=\"custom-control custom-radio\">\n            <input id=\"friends\" name=\"interestInUniversity\" type=\"radio\" class=\"custom-control-input\" value=\"Friends\" [(ngModel)]=\"record.interestInUniversity\">\n            <label class=\"custom-control-label\" for=\"friends\">Friends</label>\n          </div>\n          <div class=\"custom-control custom-radio\">\n            <input id=\"television\" name=\"interestInUniversity\" type=\"radio\" class=\"custom-control-input\" value=\"Television\" [(ngModel)]=\"record.interestInUniversity\">\n            <label class=\"custom-control-label\" for=\"television\">Television</label>\n          </div>\n          <div class=\"custom-control custom-radio\">\n            <input id=\"internet\" name=\"interestInUniversity\" type=\"radio\" class=\"custom-control-input\" value=\"Internet\" [(ngModel)]=\"record.interestInUniversity\">\n            <label class=\"custom-control-label\" for=\"internet\">Internet</label>\n          </div>\n          <div class=\"custom-control custom-radio\">\n            <input id=\"others\" name=\"interestInUniversity\" type=\"radio\" class=\"custom-control-input\" value=\"Others\" [(ngModel)]=\"record.interestInUniversity\">\n            <label class=\"custom-control-label\" for=\"others\">Others</label>\n          </div>\n        </div>\n\n        <hr class=\"mb-4\">\n        <h5>Additional Comments</h5>\n        <textarea id=\"comments\" name=\"comments\" rows=\"4\" cols=\"100\" [(ngModel)]=\"record.comments\"></textarea>\n        <hr class=\"mb-4\">\n        <h5>Please select high-school graduation date</h5>\n\n        <div class=\"row\">\n          <div class=\"col-md-6 mb-3\">\n            <label for=\"graduationMonth\">Month</label>\n            <input list=\"month\" name=\"month\" [(ngModel)]=\"record.month\">\n              <datalist id=\"month\">\n                <option value=\"January\">\n                <option value=\"February\">\n                <option value=\"March\">\n                <option value=\"April\">\n                <option value=\"May\">\n                <option value=\"June\">\n                <option value=\"July\">\n                <option value=\"August\">\n                <option value=\"September\">\n                <option value=\"October\">\n                <option value=\"November\">\n                <option value=\"December\">\n              </datalist>\n          </div>\n\n          <div class=\"col-md-6 mb-3\">\n            <label for=\"graduationYear\">Year</label>\n            <input type=\"number\"  min=\"1950\" max=\"2020\" step=\"1\" id=\"graduationYear\" name=\"graduationYear\" placeholder=\"yyyy\" [(ngModel)]=\"record.graduationYear\">\n          </div>\n        </div>\n\n        <hr class=\"mb-4\">\n        <h5>How likely are you to recommend this school to other prospective students</h5>\n\n        <div class=\"mb-3\">\n          <select id=\"recommend\" name=\"recommend\" [(ngModel)]=\"record.recommend\">\n            <option value=\"veryLikely\">Very Likely</option>\n            <option value=\"likely\">Likely</option>\n            <option value=\"unlikely\">Unlikely</option>\n          </select>\n        </div>\n        <hr class=\"mb-4\">\n        <div class=\"row \">\n          <button class=\"col-md-5 btn btn-primary btn-lg btn-block\" type=\"button\"  style=\"margin-top: 0.5rem; margin-right: 0.5rem\" >Reset</button>\n          <button class=\"col-md-5 btn btn-primary btn-lg btn-block\" type=\"submit\" value=\"Submit\">Submit</button>\n        </div>\n        \n </form>\n </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-winner-ack-list',\n  templateUrl: './winner-ack-list.component.html',\n  styleUrls: ['./winner-ack-list.component.css']\n})\nexport class WinnerAckListComponent implements OnInit {\n\n  mean = null;\n  stdDev = null;\n  list = null;\n\n\n  constructor(private http: HttpClient, private router: Router) {\n    this.mean = this.router.getCurrentNavigation().extras.state.mean;\n    this.stdDev = this.router.getCurrentNavigation().extras.state.std;\n  }\n\n  onClick(param) {\n    this.router.navigate(['/readSurvey'], { state: { studentid: param } });\n  }\n  ngOnInit(): void {\n    this.http.get<any>('http://localhost:8080/ApiTesting1/rest/api/getStudentsID').subscribe(data => {\n    this.list = data;\n    });\n  }\n}\n","<meta charset=\"ISO-8859-1\">\n<html>\n\n<title>Simple Acknowledgement</title>\n<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\" integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\n \n <div class=\"bg-light\">\n    <div class=\"py-3 text-center\" style=\"background-color:#FFCC33 \">\n      <div style=\"background-color: #006633 \">\n        <img class=\"d-block mx-auto \" src=\"assets/img/mason-logo2.png\" alt=\"George Mason Logo\" width=\"70\" height=\"70\">\n      </div>\n    </div>\n  <div class=\"container\">\n    <h2 class=\"py-2 text-center custom-style\">Winner Acknowledgement</h2> \n    <body >\n            <h2>Congratulations!!</h2>\n            <h4>You have won two movie tickets!</h4>\n            <h4>Mean : {{mean}}</h4>\n            <h4>Standard Deviation is: {{stdDev}}</h4>\n            <p *ngIf=\"list==null\">Fetching data from database...</p>\n            <ul *ngFor=\"let each of list\" style=\"height: 20px;\">\n                <li (click)=\"onClick(each)\">{{each}}</li>\n            </ul>\n            \n\n    </body>\n    </div>\n    </div>\n\n</html>\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}